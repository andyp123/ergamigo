TODO
====

Ideas
-----
+ Separate each stroke into components and label each msg with the machine
  serial number and stroke id.
+ message types:
  - workout begin
  - workout end
  - stroke start
  - force plot extend
  - stroke end
+ msg format:
  erg_id, workout_id, stroke_id, msg_type, msg_content

              while workout['state'] == 1:
                # stroke start message
                stroke = { 'erg_id' : erg_id, 'stroke_id' : stroke_id }
                yield from send_message(websocket, stroke, msg_type="STROKE_START", log=False)

                # get force during drive (and make sure we get the entire stroke)
                force = []
                while True:
                    forceplot = erg.getForcePlot()
                    force.extend(forceplot['forceplot'])
                    yield from send_message(websocket, { 'erg_id' : erg_id, 'stroke_id' : stroke_id, 'forceplot' : forceplot['forceplot'] }, msg_type="STROKE_FORCE", log=False)
                    if forceplot['strokestate'] != 2:
                        break

                monitor = erg.getMonitor()
                stroke['monitor'] = monitor
                stroke['forceplot'] = force
                # yield from send_message(websocket, stroke, msg_type="STROKE", log=False)
                yield from send_message(websocket, stroke, msg_type="STROKE_END", log=False)
                print("[{}] time: {}, distance: {}, pace: {}".format(stroke_id, monitor['time'], monitor['distance'], monitor['pace']))
                
                # wait for next stroke
                while forceplot['strokestate'] != 2 and workout['state'] == 1:
                    forceplot = erg.getForcePlot()
                    workout = erg.getWorkout()
                stroke_id += 1